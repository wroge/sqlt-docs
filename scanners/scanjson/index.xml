<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ScanJSON on {{ sqlt }}</title><link>https://wroge.github.io/sqlt-docs/scanners/scanjson/</link><description>Recent content in ScanJSON on {{ sqlt }}</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 06 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://wroge.github.io/sqlt-docs/scanners/scanjson/index.xml" rel="self" type="application/rss+xml"/><item><title>ScanJSON</title><link>https://wroge.github.io/sqlt-docs/docs/scanner/scan-json/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/docs/scanner/scan-json/</guid><description> {{ ScanJSON Field }}
Example type Book struct { ID int64 Authors []string } var queryBook = sqlt.One[string, Book](sqlt.Parse(` SELECT books.id {{ ScanInt &amp;#34;ID&amp;#34; }} , JSON_AGG(authors.name) {{ ScanJSON &amp;#34;Authors&amp;#34; }} FROM books LEFT JOIN book_authors ON books.id = book_authors.book_id LEFT JOIN authors ON authors.id = book_authors.author_id WHERE books.title = {{ . }} `))</description></item></channel></rss>