<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ScanStringSlice on {{ sqlt }}</title><link>https://wroge.github.io/sqlt-docs/scanners/scanstringslice/</link><description>Recent content in ScanStringSlice on {{ sqlt }}</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 06 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://wroge.github.io/sqlt-docs/scanners/scanstringslice/index.xml" rel="self" type="application/rss+xml"/><item><title>5. Complex Query</title><link>https://wroge.github.io/sqlt-docs/tour/5_complex_query/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/tour/5_complex_query/</guid><description>tour/complex_query/queries.sql {{ define &amp;#34;schema&amp;#34; }} CREATE TABLE IF NOT EXISTS books ( id INTEGER PRIMARY KEY, title TEXT NOT NULL, added_at DATE NOT NULL ); CREATE TABLE IF NOT EXISTS authors ( id INTEGER PRIMARY KEY, name TEXT UNIQUE ); CREATE TABLE IF NOT EXISTS book_authors ( book_id INTEGER REFERENCES books(id), author_id INTEGER REFERENCES authors(id), PRIMARY KEY (book_id, author_id) ); {{ end }} {{ define &amp;#34;upsert_authors&amp;#34; }} INSERT INTO authors (name) VALUES {{ range $i, $a := .</description></item><item><title>ScanStringSlice</title><link>https://wroge.github.io/sqlt-docs/documentation/scanner/scan-string-slice/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/documentation/scanner/scan-string-slice/</guid><description> {{ ScanStringSlice Field Sep }}
Example var queryTags = sqlt.First[any, []string](sqlt.Parse(` SELECT &amp;#39;hello,world&amp;#39;; {{ ScanStringSlice &amp;#34;&amp;#34; &amp;#34;,&amp;#34; }} `))</description></item></channel></rss>