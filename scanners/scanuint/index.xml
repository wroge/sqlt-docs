<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ScanUint on {{ sqlt }}</title><link>https://wroge.github.io/sqlt-docs/scanners/scanuint/</link><description>Recent content in ScanUint on {{ sqlt }}</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 06 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://wroge.github.io/sqlt-docs/scanners/scanuint/index.xml" rel="self" type="application/rss+xml"/><item><title>ScanUint</title><link>https://wroge.github.io/sqlt-docs/documentation/scanner/scan-uint/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/documentation/scanner/scan-uint/</guid><description> {{ ScanUint Field }}
Example type Book struct { ID uint Pages *uint64 Edition sql.Null[uint64] } type Query struct { Title string } var queryBook = sqlt.First[Query, Book](sqlt.Parse(` SELECT id {{ ScanUint &amp;#34;ID&amp;#34; }} , pages {{ ScanUint &amp;#34;Pages&amp;#34; }} , edition {{ Scan &amp;#34;Edition&amp;#34; }} FROM books WHERE title = {{ .Title }} `))</description></item></channel></rss>