<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>NoCache on {{ sqlt }}</title><link>https://wroge.github.io/sqlt-docs/configs/nocache/</link><description>Recent content in NoCache on {{ sqlt }}</description><generator>Hugo</generator><language>en</language><atom:link href="https://wroge.github.io/sqlt-docs/configs/nocache/index.xml" rel="self" type="application/rss+xml"/><item><title>1. Create Statements</title><link>https://wroge.github.io/sqlt-docs/tour/1_create_statements/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/tour/1_create_statements/</guid><description>tour/create_statements/repository.go package repository import ( &amp;#34;context&amp;#34; &amp;#34;database/sql&amp;#34; &amp;#34;github.com/wroge/sqlt&amp;#34; _ &amp;#34;modernc.org/sqlite&amp;#34; ) type Book struct { ID int64 Title string } var ( schema = sqlt.Exec[any](sqlt.Parse(` CREATE TABLE IF NOT EXISTS books ( id INTEGER PRIMARY KEY, title TEXT NOT NULL ) `)) create = sqlt.First[string, int64](sqlt.Parse(` INSERT INTO books (title) VALUES ({{ . }}) RETURNING id; `)) get = sqlt.First[int64, Book](sqlt.Parse(` SELECT id {{ Scan &amp;#34;ID&amp;#34; }} , title {{ Scan &amp;#34;Title&amp;#34; }} FROM books WHERE id = {{ .</description></item></channel></rss>