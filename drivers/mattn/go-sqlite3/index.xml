<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Mattn/Go-Sqlite3 on {{ sqlt }}</title><link>https://wroge.github.io/sqlt-docs/drivers/mattn/go-sqlite3/</link><description>Recent content in Mattn/Go-Sqlite3 on {{ sqlt }}</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 06 Apr 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://wroge.github.io/sqlt-docs/drivers/mattn/go-sqlite3/index.xml" rel="self" type="application/rss+xml"/><item><title>mattn/go-sqlite3</title><link>https://wroge.github.io/sqlt-docs/documentation/driver/mattn-go-sqlite3/</link><pubDate>Sun, 06 Apr 2025 00:00:00 +0000</pubDate><guid>https://wroge.github.io/sqlt-docs/documentation/driver/mattn-go-sqlite3/</guid><description>go-sqlite3 is cgo package. If you want to build your app using go-sqlite3, you need gcc.
Example import ( &amp;#34;context&amp;#34; &amp;#34;database/sql&amp;#34; _ &amp;#34;github.com/mattn/go-sqlite3&amp;#34; &amp;#34;github.com/wroge/sqlt&amp;#34; ) type Book struct { ID int64 Title string } type Query struct { Title string } var queryBook = sqlt.First[Query, Book](sqlt.Parse(` SELECT id {{ ScanInt &amp;#34;ID&amp;#34; }} , title {{ ScanString &amp;#34;Title&amp;#34; }} FROM books WHERE title = {{ .Title }} `)) db, err := sql.</description></item></channel></rss>